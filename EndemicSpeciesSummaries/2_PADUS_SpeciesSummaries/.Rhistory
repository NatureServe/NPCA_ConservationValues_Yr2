coord_flip() +
geom_abline(slope=0, intercept=0.0,  col = "white") +
ggtitle(paste(lstStudyAreas[i],"Study Area")) +
ylab("Outside Study Area                                                             Inside Study Area") +
scale_y_continuous(limits = c(-100, 100), breaks=c(-100,-75,-50,-25, 0, 25,50,75,100), labels=c("100%","75%","50%","25%", "0%", "25%","50%","75%","100%")) +
scale_fill_manual(values=c("#b1b1b1","#bed5cf","#659fb5","#869447","#27613b"), guide = guide_legend(reverse = TRUE)) +
theme_minimal() +
#theme(panel.background = element_rect(fill = "transparent"), panel.grid = element_blank(),legend.position = "bottom")
#theme(panel.background = element_rect(fill = "transparent"), legend.position = "bottom")
theme(panel.grid = element_blank(),legend.position = "bottom")
}
StudyAreaSpecies_subset3 %>%
ggplot(aes(x = reorder(axislable, TotalPosPercent),
y = PercentArea2,
fill = GAPstatus)) +
geom_col() +
coord_flip() +
geom_abline(slope=0, intercept=0.0,  col = "white") +
ggtitle(paste(lstStudyAreas[i],"Study Area")) +
ylab("Outside Study Area                                                             Inside Study Area") +
scale_y_continuous(limits = c(-100, 100), breaks=c(-100,-75,-50,-25, 0, 25,50,75,100), labels=c("100%","75%","50%","25%", "0%", "25%","50%","75%","100%")) +
scale_fill_manual(values=c("#b1b1b1","#bed5cf","#659fb5","#869447","#27613b"), guide = guide_legend(reverse = TRUE)) +
theme_minimal() +
#theme(panel.background = element_rect(fill = "transparent"), panel.grid = element_blank(),legend.position = "bottom")
#theme(panel.background = element_rect(fill = "transparent"), legend.position = "bottom")
theme(panel.grid = element_blank(),legend.position = "bottom")
View(StudyAreaSpecies_subset3)
View(StudyAreaSpecies_subset3)
StudyAreaSpecies_subset3$axislable <- paste0(StudyAreaSpecies_subset3$Scientific, " (", StudyAreaSpecies_subset3$Rounded_GR, ")")
StudyAreaSpecies_subset3$GAPstatus <- paste0("GAP",StudyAreaSpecies_subset3$GAPstatus)
inputTabAreaGAP <- "S:/Projects/NPCA/_Year2/Data/Intermediate/SpeciesSummaries_yr2.gdb/MoBIshms_TabAreaMerge_GreaterYellowstone" # UPDATE Input Tabulate Area table - Managed Lands or GAP status focused
inputTabAreaGAP <- arc.open(inputTabAreaGAP)
inputTabAreaGAP <- arc.select(inputTabAreaGAP)
inputTabAreaGAP <- as.data.frame(inputTabAreaGAP)
cutecodes <- read.csv("S:/Projects/_Workspaces/Hannah_Hyatt/MoBI_Gov_Relations/SpeciesLists/CuteCodeCrosswalk.csv")
inputTabAreaGAP$OBJECTID <- NULL
## split out study area
inputTabAreaGAP$StudyArea <- "NA"
inputTabAreaGAP$StudyArea <- gsub("\\(([^()]+)\\)", "\\1",str_extract(inputTabAreaGAP$NPCA_STATU, "\\(([^()]+)\\)"))
## split out protected unprotected
inputTabAreaGAP$Protected <- "NA"
inputTabAreaGAP$Protected <- gsub("^(.*?),.*", "\\1", inputTabAreaGAP$NPCA_STATU)
inputTabAreaGAP$GAPstatus <- "NA"
inputTabAreaGAP$GAPstatus <- sub("\\(.*", "", inputTabAreaGAP$NPCA_STATU)
inputTabAreaGAP$GAPstatus <- sub(".*GAP", "", inputTabAreaGAP$GAPstatus)
inputTabAreaGAP$GAPstatus <- gsub(" ", "", inputTabAreaGAP$GAPstatus)
inputTabAreaGAP$GAPstatus <- sub(",.*", "", inputTabAreaGAP$GAPstatus)
#lstSpecies <- unique(inputTabAreaGAP[which(inputTabAreaGAP$Highlight_sps=="TRUE"),"Scientific"])
lstSpecies <- unique(inputTabAreaGAP$Scientific)
lstStudyAreas <- unique(inputTabAreaGAP$StudyArea)
for(i in 1:length(lstStudyAreas)){
print(paste("working on ", lstStudyAreas[i], sep=""))
StudyArea_subset <- inputTabAreaGAP[which(inputTabAreaGAP$StudyArea==lstStudyAreas[i]),]
## Select all imperiled species
#lstSpecies_subset <- unique(StudyArea_subset[which(StudyArea_subset$Imperiled=="Imperiled"),"Scientific"] )
## Select a subset of the species - simplifies the bar chart output for presentation
#lstSpecies_subset <- unique(StudyArea_subset[which(StudyArea_subset$Highlight_sps=="TRUE"),"Scientific"] )
## Select all species
lstSpecies_subset <- unique(StudyArea_subset$Scientific)
# create an empty data frame
StudyAreaSpecies_subsetComb <- inputTabAreaGAP[0,]
for(j in 1:length(lstSpecies_subset)){  #
print(paste("working on ", lstSpecies[j], sep=""))
StudyAreaSpecies_subset <- inputTabAreaGAP[which(inputTabAreaGAP$Scientific==lstSpecies_subset[j]),]
StudyAreaSpecies_subset[which(StudyAreaSpecies_subset$StudyArea!=lstStudyAreas[i]),"StudyArea"] <- NA
StudyAreaSpecies_subsetComb <- rbind(StudyAreaSpecies_subsetComb, StudyAreaSpecies_subset)
StudyAreaSpecies_subset1 <- StudyAreaSpecies_subsetComb %>%
group_by( StudyArea, GAPstatus, Scientific,Rounded_GR) %>% #NPCA_status_GAP_StudyArea,
summarise(TotalArea = sum(VALUE_1)) %>%
ungroup()
StudyAreaSpecies_subset2 <- StudyAreaSpecies_subset1 %>%
group_by(Scientific) %>%
mutate(PercentArea =   (TotalArea / sum(TotalArea)*100) ) %>%
mutate(TotalArea2 = if_else(is.na(StudyArea), -TotalArea, TotalArea)) %>%
mutate(PercentArea2 = if_else(is.na(StudyArea), -PercentArea, PercentArea))
StudyAreaSpecies_subset3 <- StudyAreaSpecies_subset2 %>%
group_by(Scientific) %>%
mutate(TotalPosPercent =sum(PercentArea2[PercentArea2>0]))
StudyAreaSpecies_subset3 <- StudyAreaSpecies_subset3[which(StudyAreaSpecies_subset3$TotalPosPercent>50),]
StudyAreaSpecies_subset3$axislable <- paste0(StudyAreaSpecies_subset3$Scientific, " (", StudyAreaSpecies_subset3$Rounded_GR, ")")
StudyAreaSpecies_subset3$GAPstatus <- paste0("GAP",StudyAreaSpecies_subset3$GAPstatus)
StudyAreaSpecies_subset3$GAPstatus <- factor(StudyAreaSpecies_subset3$GAPstatus, levels = c("GAPNA","GAP4","GAP3","GAP2","GAP1"))
StudyAreaSpecies_subset3 %>%
ggplot(aes(x = reorder(axislable, TotalPosPercent),
y = PercentArea2,
fill = GAPstatus)) +
geom_col() +
coord_flip() +
geom_abline(slope=0, intercept=0.0,  col = "white") +
ggtitle(paste(lstStudyAreas[i],"Study Area")) +
ylab("Outside Study Area                                                             Inside Study Area") +
scale_y_continuous(limits = c(-100, 100), breaks=c(-100,-75,-50,-25, 0, 25,50,75,100), labels=c("100%","75%","50%","25%", "0%", "25%","50%","75%","100%")) +
scale_fill_manual(values=c("#b1b1b1","#bed5cf","#659fb5","#869447","#27613b"), guide = guide_legend(reverse = TRUE)) +
theme_minimal() +
#theme(panel.background = element_rect(fill = "transparent"), panel.grid = element_blank(),legend.position = "bottom")
#theme(panel.background = element_rect(fill = "transparent"), legend.position = "bottom")
theme(panel.grid = element_blank(),legend.position = "bottom")
}
}
i=1
print(paste("working on ", lstStudyAreas[i], sep=""))
StudyArea_subset <- inputTabAreaGAP[which(inputTabAreaGAP$StudyArea==lstStudyAreas[i]),]
## Select all species
lstSpecies_subset <- unique(StudyArea_subset$Scientific)
# create an empty data frame
StudyAreaSpecies_subsetComb <- inputTabAreaGAP[0,]
for(j in 1:length(lstSpecies_subset)){  #
print(paste("working on ", lstSpecies[j], sep=""))
StudyAreaSpecies_subset <- inputTabAreaGAP[which(inputTabAreaGAP$Scientific==lstSpecies_subset[j]),]
StudyAreaSpecies_subset[which(StudyAreaSpecies_subset$StudyArea!=lstStudyAreas[i]),"StudyArea"] <- NA
StudyAreaSpecies_subsetComb <- rbind(StudyAreaSpecies_subsetComb, StudyAreaSpecies_subset)
StudyAreaSpecies_subset1 <- StudyAreaSpecies_subsetComb %>%
group_by( StudyArea, GAPstatus, Scientific,Rounded_GR) %>% #NPCA_status_GAP_StudyArea,
summarise(TotalArea = sum(VALUE_1)) %>%
ungroup()
StudyAreaSpecies_subset2 <- StudyAreaSpecies_subset1 %>%
group_by(Scientific) %>%
mutate(PercentArea =   (TotalArea / sum(TotalArea)*100) ) %>%
mutate(TotalArea2 = if_else(is.na(StudyArea), -TotalArea, TotalArea)) %>%
mutate(PercentArea2 = if_else(is.na(StudyArea), -PercentArea, PercentArea))
StudyAreaSpecies_subset3 <- StudyAreaSpecies_subset2 %>%
group_by(Scientific) %>%
mutate(TotalPosPercent =sum(PercentArea2[PercentArea2>0]))
StudyAreaSpecies_subset3 <- StudyAreaSpecies_subset3[which(StudyAreaSpecies_subset3$TotalPosPercent>50),]
StudyAreaSpecies_subset3$axislable <- paste0(StudyAreaSpecies_subset3$Scientific, " (", StudyAreaSpecies_subset3$Rounded_GR, ")")
StudyAreaSpecies_subset3$GAPstatus <- paste0("GAP",StudyAreaSpecies_subset3$GAPstatus)
StudyAreaSpecies_subset3$GAPstatus <- factor(StudyAreaSpecies_subset3$GAPstatus, levels = c("GAPNA","GAP4","GAP3","GAP2","GAP1"))
StudyAreaSpecies_subset3 %>%
ggplot(aes(x = reorder(axislable, TotalPosPercent),
y = PercentArea2,
fill = GAPstatus)) +
geom_col() +
coord_flip() +
geom_abline(slope=0, intercept=0.0,  col = "white") +
ggtitle(paste(lstStudyAreas[i],"Study Area")) +
ylab("Outside Study Area                                                             Inside Study Area") +
scale_y_continuous(limits = c(-100, 100), breaks=c(-100,-75,-50,-25, 0, 25,50,75,100), labels=c("100%","75%","50%","25%", "0%", "25%","50%","75%","100%")) +
scale_fill_manual(values=c("#b1b1b1","#bed5cf","#659fb5","#869447","#27613b"), guide = guide_legend(reverse = TRUE)) +
theme_minimal() +
#theme(panel.background = element_rect(fill = "transparent"), panel.grid = element_blank(),legend.position = "bottom")
#theme(panel.background = element_rect(fill = "transparent"), legend.position = "bottom")
theme(panel.grid = element_blank(),legend.position = "bottom")
}
StudyAreaSpecies_subset3 %>%
ggplot(aes(x = reorder(axislable, TotalPosPercent),
y = PercentArea2,
fill = GAPstatus)) +
geom_col() +
coord_flip() +
geom_abline(slope=0, intercept=0.0,  col = "white") +
ggtitle(paste(lstStudyAreas[i],"Study Area")) +
ylab("Outside Study Area                                                             Inside Study Area") +
scale_y_continuous(limits = c(-100, 100), breaks=c(-100,-75,-50,-25, 0, 25,50,75,100), labels=c("100%","75%","50%","25%", "0%", "25%","50%","75%","100%")) +
scale_fill_manual(values=c("#b1b1b1","#bed5cf","#659fb5","#869447","#27613b"), guide = guide_legend(reverse = TRUE)) +
theme_minimal() +
#theme(panel.background = element_rect(fill = "transparent"), panel.grid = element_blank(),legend.position = "bottom")
#theme(panel.background = element_rect(fill = "transparent"), legend.position = "bottom")
theme(panel.grid = element_blank(),legend.position = "bottom")
View(StudyAreaSpecies_subset3)
rm(StudyAreaSpecies_subset)
rm(StudyAreaSpecies_subset1)
rm(StudyAreaSpecies_subset2)
rm(StudyAreaSpecies_subset3)
rm(StudyArea_subset)
rm(StudyAreaSpecies_subsetComb)
print(paste("working on ", lstStudyAreas[i], sep=""))
StudyArea_subset <- inputTabAreaGAP[which(inputTabAreaGAP$StudyArea==lstStudyAreas[i]),]
View(StudyArea_subset)
## Select all species
lstSpecies_subset <- unique(StudyArea_subset$Scientific)
# create an empty data frame
StudyAreaSpecies_subsetComb <- inputTabAreaGAP[0,]
print(paste("working on ", lstSpecies[j], sep=""))
StudyAreaSpecies_subset <- inputTabAreaGAP[which(inputTabAreaGAP$Scientific==lstSpecies_subset[j]),]
StudyAreaSpecies_subset[which(StudyAreaSpecies_subset$StudyArea!=lstStudyAreas[i]),"StudyArea"] <- NA
View(StudyAreaSpecies_subset)
StudyAreaSpecies_subsetComb <- rbind(StudyAreaSpecies_subsetComb, StudyAreaSpecies_subset)
StudyAreaSpecies_subset1 <- StudyAreaSpecies_subsetComb %>%
group_by( StudyArea, GAPstatus, Scientific,Rounded_GR) %>% #NPCA_status_GAP_StudyArea,
summarise(TotalArea = sum(VALUE_1)) %>%
ungroup()
View(StudyAreaSpecies_subset1)
StudyAreaSpecies_subset2 <- StudyAreaSpecies_subset1 %>%
group_by(Scientific) %>%
mutate(PercentArea =   (TotalArea / sum(TotalArea)*100) ) %>%
mutate(TotalArea2 = if_else(is.na(StudyArea), -TotalArea, TotalArea)) %>%
mutate(PercentArea2 = if_else(is.na(StudyArea), -PercentArea, PercentArea))
View(StudyAreaSpecies_subset2)
StudyAreaSpecies_subset3 <- StudyAreaSpecies_subset2 %>%
group_by(Scientific) %>%
mutate(TotalPosPercent =sum(PercentArea2[PercentArea2>0]))
View(StudyAreaSpecies_subset3)
StudyAreaSpecies_subset3 <- StudyAreaSpecies_subset3[which(StudyAreaSpecies_subset3$TotalPosPercent>50),]
print(paste("working on ", lstSpecies[j], sep=""))
StudyAreaSpecies_subset <- inputTabAreaGAP[which(inputTabAreaGAP$Scientific==lstSpecies_subset[j]),]
StudyAreaSpecies_subset[which(StudyAreaSpecies_subset$StudyArea!=lstStudyAreas[i]),"StudyArea"] <- NA
StudyAreaSpecies_subsetComb <- rbind(StudyAreaSpecies_subsetComb, StudyAreaSpecies_subset)
StudyAreaSpecies_subset1 <- StudyAreaSpecies_subsetComb %>%
group_by( StudyArea, GAPstatus, Scientific,Rounded_GR) %>% #NPCA_status_GAP_StudyArea,
summarise(TotalArea = sum(VALUE_1)) %>%
ungroup()
StudyAreaSpecies_subset2 <- StudyAreaSpecies_subset1 %>%
group_by(Scientific) %>%
mutate(PercentArea =   (TotalArea / sum(TotalArea)*100) ) %>%
mutate(TotalArea2 = if_else(is.na(StudyArea), -TotalArea, TotalArea)) %>%
mutate(PercentArea2 = if_else(is.na(StudyArea), -PercentArea, PercentArea))
StudyAreaSpecies_subset3 <- StudyAreaSpecies_subset2 %>%
group_by(Scientific) %>%
mutate(TotalPosPercent =sum(PercentArea2[PercentArea2>0]))
View(StudyAreaSpecies_subset3)
StudyAreaSpecies_subset3$axislable <- paste0(StudyAreaSpecies_subset3$Scientific, " (", StudyAreaSpecies_subset3$Rounded_GR, ")")
StudyAreaSpecies_subset3$GAPstatus <- paste0("GAP",StudyAreaSpecies_subset3$GAPstatus)
StudyAreaSpecies_subset3$GAPstatus <- factor(StudyAreaSpecies_subset3$GAPstatus, levels = c("GAPUnprotected","GAP4","GAP3","GAP2","GAP1"))
StudyAreaSpecies_subset3 %>%
ggplot(aes(x = reorder(axislable, TotalPosPercent),
y = PercentArea2,
fill = GAPstatus)) +
geom_col() +
coord_flip() +
geom_abline(slope=0, intercept=0.0,  col = "white") +
ggtitle(paste(lstStudyAreas[i],"Study Area")) +
ylab("Outside Study Area                                                             Inside Study Area") +
scale_y_continuous(limits = c(-100, 100), breaks=c(-100,-75,-50,-25, 0, 25,50,75,100), labels=c("100%","75%","50%","25%", "0%", "25%","50%","75%","100%")) +
scale_fill_manual(values=c("#b1b1b1","#bed5cf","#659fb5","#869447","#27613b"), guide = guide_legend(reverse = TRUE)) +
theme_minimal() +
#theme(panel.background = element_rect(fill = "transparent"), panel.grid = element_blank(),legend.position = "bottom")
#theme(panel.background = element_rect(fill = "transparent"), legend.position = "bottom")
theme(panel.grid = element_blank(),legend.position = "bottom")
for(j in 1:length(lstSpecies_subset)){  #
print(paste("working on ", lstSpecies[j], sep=""))
StudyAreaSpecies_subset <- inputTabAreaGAP[which(inputTabAreaGAP$Scientific==lstSpecies_subset[j]),]
StudyAreaSpecies_subset[which(StudyAreaSpecies_subset$StudyArea!=lstStudyAreas[i]),"StudyArea"] <- NA
StudyAreaSpecies_subsetComb <- rbind(StudyAreaSpecies_subsetComb, StudyAreaSpecies_subset)
StudyAreaSpecies_subset1 <- StudyAreaSpecies_subsetComb %>%
group_by( StudyArea, GAPstatus, Scientific,Rounded_GR) %>% #NPCA_status_GAP_StudyArea,
summarise(TotalArea = sum(VALUE_1)) %>%
ungroup()
StudyAreaSpecies_subset2 <- StudyAreaSpecies_subset1 %>%
group_by(Scientific) %>%
mutate(PercentArea =   (TotalArea / sum(TotalArea)*100) ) %>%
mutate(TotalArea2 = if_else(is.na(StudyArea), -TotalArea, TotalArea)) %>%
mutate(PercentArea2 = if_else(is.na(StudyArea), -PercentArea, PercentArea))
StudyAreaSpecies_subset3 <- StudyAreaSpecies_subset2 %>%
group_by(Scientific) %>%
mutate(TotalPosPercent =sum(PercentArea2[PercentArea2>0]))
StudyAreaSpecies_subset3 <- StudyAreaSpecies_subset3[which(StudyAreaSpecies_subset3$TotalPosPercent>50),]
StudyAreaSpecies_subset3$axislable <- paste0(StudyAreaSpecies_subset3$Scientific, " (", StudyAreaSpecies_subset3$Rounded_GR, ")")
StudyAreaSpecies_subset3$GAPstatus <- paste0("GAP",StudyAreaSpecies_subset3$GAPstatus)
StudyAreaSpecies_subset3$GAPstatus <- factor(StudyAreaSpecies_subset3$GAPstatus, levels = c("GAPUnprotected","GAP4","GAP3","GAP2","GAP1"))
StudyAreaSpecies_subset3 %>%
ggplot(aes(x = reorder(axislable, TotalPosPercent),
y = PercentArea2,
fill = GAPstatus)) +
geom_col() +
coord_flip() +
geom_abline(slope=0, intercept=0.0,  col = "white") +
ggtitle(paste(lstStudyAreas[i],"Study Area")) +
ylab("Outside Study Area                                                             Inside Study Area") +
scale_y_continuous(limits = c(-100, 100), breaks=c(-100,-75,-50,-25, 0, 25,50,75,100), labels=c("100%","75%","50%","25%", "0%", "25%","50%","75%","100%")) +
scale_fill_manual(values=c("#b1b1b1","#bed5cf","#659fb5","#869447","#27613b"), guide = guide_legend(reverse = TRUE)) +
theme_minimal() +
#theme(panel.background = element_rect(fill = "transparent"), panel.grid = element_blank(),legend.position = "bottom")
#theme(panel.background = element_rect(fill = "transparent"), legend.position = "bottom")
theme(panel.grid = element_blank(),legend.position = "bottom")
}
StudyAreaSpecies_subset3 %>%
ggplot(aes(x = reorder(axislable, TotalPosPercent),
y = PercentArea2,
fill = GAPstatus)) +
geom_col() +
coord_flip() +
geom_abline(slope=0, intercept=0.0,  col = "white") +
ggtitle(paste(lstStudyAreas[i],"Study Area")) +
ylab("Outside Study Area                                                             Inside Study Area") +
scale_y_continuous(limits = c(-100, 100), breaks=c(-100,-75,-50,-25, 0, 25,50,75,100), labels=c("100%","75%","50%","25%", "0%", "25%","50%","75%","100%")) +
scale_fill_manual(values=c("#b1b1b1","#bed5cf","#659fb5","#869447","#27613b"), guide = guide_legend(reverse = TRUE)) +
theme_minimal() +
#theme(panel.background = element_rect(fill = "transparent"), panel.grid = element_blank(),legend.position = "bottom")
#theme(panel.background = element_rect(fill = "transparent"), legend.position = "bottom")
theme(panel.grid = element_blank(),legend.position = "bottom")
for(j in 1:length(lstSpecies_subset)){  #
print(paste("working on ", lstSpecies[j], sep=""))
StudyAreaSpecies_subset <- inputTabAreaGAP[which(inputTabAreaGAP$Scientific==lstSpecies_subset[j]),]
StudyAreaSpecies_subset[which(StudyAreaSpecies_subset$StudyArea!=lstStudyAreas[i]),"StudyArea"] <- NA
StudyAreaSpecies_subsetComb <- rbind(StudyAreaSpecies_subsetComb, StudyAreaSpecies_subset)
StudyAreaSpecies_subset1 <- StudyAreaSpecies_subsetComb %>%
group_by( StudyArea, GAPstatus, Scientific,Rounded_GR) %>% #NPCA_status_GAP_StudyArea,
summarise(TotalArea = sum(VALUE_1)) %>%
ungroup()
StudyAreaSpecies_subset2 <- StudyAreaSpecies_subset1 %>%
group_by(Scientific) %>%
mutate(PercentArea =   (TotalArea / sum(TotalArea)*100) ) %>%
mutate(TotalArea2 = if_else(is.na(StudyArea), -TotalArea, TotalArea)) %>%
mutate(PercentArea2 = if_else(is.na(StudyArea), -PercentArea, PercentArea))
StudyAreaSpecies_subset3 <- StudyAreaSpecies_subset2 %>%
group_by(Scientific) %>%
mutate(TotalPosPercent =sum(PercentArea2[PercentArea2>0]))
StudyAreaSpecies_subset3 <- StudyAreaSpecies_subset3[which(StudyAreaSpecies_subset3$TotalPosPercent>50),]
StudyAreaSpecies_subset3$axislable <- paste0(StudyAreaSpecies_subset3$Scientific, " (", StudyAreaSpecies_subset3$Rounded_GR, ")")
StudyAreaSpecies_subset3$GAPstatus <- paste0("GAP",StudyAreaSpecies_subset3$GAPstatus)
StudyAreaSpecies_subset3$GAPstatus[StudyAreaSpecies_subset3$GAPstatus == "GAPUnprotected"] <- "Unprotected"
StudyAreaSpecies_subset3$GAPstatus <- factor(StudyAreaSpecies_subset3$GAPstatus, levels = c("Unprotected","GAP4","GAP3","GAP2","GAP1"))
StudyAreaSpecies_subset3 %>%
ggplot(aes(x = reorder(axislable, TotalPosPercent),
y = PercentArea2,
fill = GAPstatus)) +
geom_col() +
coord_flip() +
geom_abline(slope=0, intercept=0.0,  col = "white") +
ggtitle(paste(lstStudyAreas[i],"Study Area")) +
ylab("Outside Study Area                                                             Inside Study Area") +
scale_y_continuous(limits = c(-100, 100), breaks=c(-100,-75,-50,-25, 0, 25,50,75,100), labels=c("100%","75%","50%","25%", "0%", "25%","50%","75%","100%")) +
scale_fill_manual(values=c("#b1b1b1","#bed5cf","#659fb5","#869447","#27613b"), guide = guide_legend(reverse = TRUE)) +
theme_minimal() +
#theme(panel.background = element_rect(fill = "transparent"), panel.grid = element_blank(),legend.position = "bottom")
#theme(panel.background = element_rect(fill = "transparent"), legend.position = "bottom")
theme(panel.grid = element_blank(),legend.position = "bottom")
}
StudyAreaSpecies_subset3 %>%
ggplot(aes(x = reorder(axislable, TotalPosPercent),
y = PercentArea2,
fill = GAPstatus)) +
geom_col() +
coord_flip() +
geom_abline(slope=0, intercept=0.0,  col = "white") +
ggtitle(paste(lstStudyAreas[i],"Study Area")) +
ylab("Outside Study Area                                                             Inside Study Area") +
scale_y_continuous(limits = c(-100, 100), breaks=c(-100,-75,-50,-25, 0, 25,50,75,100), labels=c("100%","75%","50%","25%", "0%", "25%","50%","75%","100%")) +
scale_fill_manual(values=c("#b1b1b1","#bed5cf","#659fb5","#869447","#27613b"), guide = guide_legend(reverse = TRUE)) +
theme_minimal() +
#theme(panel.background = element_rect(fill = "transparent"), panel.grid = element_blank(),legend.position = "bottom")
#theme(panel.background = element_rect(fill = "transparent"), legend.position = "bottom")
theme(panel.grid = element_blank(),legend.position = "bottom")
for(j in 1:length(lstSpecies_subset)){  #
print(paste("working on ", lstSpecies[j], sep=""))
StudyAreaSpecies_subset <- inputTabAreaGAP[which(inputTabAreaGAP$Scientific==lstSpecies_subset[j]),]
StudyAreaSpecies_subset[which(StudyAreaSpecies_subset$StudyArea!=lstStudyAreas[i]),"StudyArea"] <- NA
StudyAreaSpecies_subsetComb <- rbind(StudyAreaSpecies_subsetComb, StudyAreaSpecies_subset)
StudyAreaSpecies_subset1 <- StudyAreaSpecies_subsetComb %>%
group_by( StudyArea, GAPstatus, Scientific,Rounded_GR) %>% #NPCA_status_GAP_StudyArea,
summarise(TotalArea = sum(VALUE_1)) %>%
ungroup()
StudyAreaSpecies_subset2 <- StudyAreaSpecies_subset1 %>%
group_by(Scientific) %>%
mutate(PercentArea =   (TotalArea / sum(TotalArea)*100) ) %>%
mutate(TotalArea2 = if_else(is.na(StudyArea), -TotalArea, TotalArea)) %>%
mutate(PercentArea2 = if_else(is.na(StudyArea), -PercentArea, PercentArea))
StudyAreaSpecies_subset3 <- StudyAreaSpecies_subset2 %>%
group_by(Scientific) %>%
mutate(TotalPosPercent =sum(PercentArea2[PercentArea2>0]))
#StudyAreaSpecies_subset3 <- StudyAreaSpecies_subset3[which(StudyAreaSpecies_subset3$TotalPosPercent>50),]
StudyAreaSpecies_subset3$axislable <- paste0(StudyAreaSpecies_subset3$Scientific, " (", StudyAreaSpecies_subset3$Rounded_GR, ")")
StudyAreaSpecies_subset3$GAPstatus <- paste0("GAP",StudyAreaSpecies_subset3$GAPstatus)
StudyAreaSpecies_subset3$GAPstatus[StudyAreaSpecies_subset3$GAPstatus == "GAPUnprotected"] <- "Unprotected"
StudyAreaSpecies_subset3$GAPstatus <- factor(StudyAreaSpecies_subset3$GAPstatus, levels = c("Unprotected","GAP4","GAP3","GAP2","GAP1"))
StudyAreaSpecies_subset3 %>%
ggplot(aes(x = reorder(axislable, TotalPosPercent),
y = PercentArea2,
fill = GAPstatus)) +
geom_col() +
coord_flip() +
geom_abline(slope=0, intercept=0.0,  col = "white") +
ggtitle(paste(lstStudyAreas[i],"Study Area")) +
ylab("Outside Study Area                                                             Inside Study Area") +
scale_y_continuous(limits = c(-100, 100), breaks=c(-100,-75,-50,-25, 0, 25,50,75,100), labels=c("100%","75%","50%","25%", "0%", "25%","50%","75%","100%")) +
scale_fill_manual(values=c("#b1b1b1","#bed5cf","#659fb5","#869447","#27613b"), guide = guide_legend(reverse = TRUE)) +
theme_minimal() +
#theme(panel.background = element_rect(fill = "transparent"), panel.grid = element_blank(),legend.position = "bottom")
#theme(panel.background = element_rect(fill = "transparent"), legend.position = "bottom")
theme(panel.grid = element_blank(),legend.position = "bottom")
}
StudyAreaSpecies_subset3 %>%
ggplot(aes(x = reorder(axislable, TotalPosPercent),
y = PercentArea2,
fill = GAPstatus)) +
geom_col() +
coord_flip() +
geom_abline(slope=0, intercept=0.0,  col = "white") +
ggtitle(paste(lstStudyAreas[i],"Study Area")) +
ylab("Outside Study Area                                                             Inside Study Area") +
scale_y_continuous(limits = c(-100, 100), breaks=c(-100,-75,-50,-25, 0, 25,50,75,100), labels=c("100%","75%","50%","25%", "0%", "25%","50%","75%","100%")) +
scale_fill_manual(values=c("#b1b1b1","#bed5cf","#659fb5","#869447","#27613b"), guide = guide_legend(reverse = TRUE)) +
theme_minimal() +
#theme(panel.background = element_rect(fill = "transparent"), panel.grid = element_blank(),legend.position = "bottom")
#theme(panel.background = element_rect(fill = "transparent"), legend.position = "bottom")
theme(panel.grid = element_blank(),legend.position = "bottom")
for(j in 1:length(lstSpecies_subset)){  #
print(paste("working on ", lstSpecies[j], sep=""))
StudyAreaSpecies_subset <- inputTabAreaGAP[which(inputTabAreaGAP$Scientific==lstSpecies_subset[j]),]
StudyAreaSpecies_subset[which(StudyAreaSpecies_subset$StudyArea!=lstStudyAreas[i]),"StudyArea"] <- NA
StudyAreaSpecies_subsetComb <- rbind(StudyAreaSpecies_subsetComb, StudyAreaSpecies_subset)
StudyAreaSpecies_subset1 <- StudyAreaSpecies_subsetComb %>%
group_by( StudyArea, GAPstatus, Scientific,Rounded_GR) %>% #NPCA_status_GAP_StudyArea,
summarise(TotalArea = sum(VALUE_1)) %>%
ungroup()
StudyAreaSpecies_subset2 <- StudyAreaSpecies_subset1 %>%
group_by(Scientific) %>%
mutate(PercentArea =   (TotalArea / sum(TotalArea)*100) ) %>%
mutate(TotalArea2 = if_else(is.na(StudyArea), -TotalArea, TotalArea)) %>%
mutate(PercentArea2 = if_else(is.na(StudyArea), -PercentArea, PercentArea))
StudyAreaSpecies_subset3 <- StudyAreaSpecies_subset2 %>%
group_by(Scientific) %>%
mutate(TotalPosPercent =sum(PercentArea2[PercentArea2>10]))
#StudyAreaSpecies_subset3 <- StudyAreaSpecies_subset3[which(StudyAreaSpecies_subset3$TotalPosPercent>50),]
StudyAreaSpecies_subset3$axislable <- paste0(StudyAreaSpecies_subset3$Scientific, " (", StudyAreaSpecies_subset3$Rounded_GR, ")")
StudyAreaSpecies_subset3$GAPstatus <- paste0("GAP",StudyAreaSpecies_subset3$GAPstatus)
StudyAreaSpecies_subset3$GAPstatus[StudyAreaSpecies_subset3$GAPstatus == "GAPUnprotected"] <- "Unprotected"
StudyAreaSpecies_subset3$GAPstatus <- factor(StudyAreaSpecies_subset3$GAPstatus, levels = c("Unprotected","GAP4","GAP3","GAP2","GAP1"))
StudyAreaSpecies_subset3 %>%
ggplot(aes(x = reorder(axislable, TotalPosPercent),
y = PercentArea2,
fill = GAPstatus)) +
geom_col() +
coord_flip() +
geom_abline(slope=0, intercept=0.0,  col = "white") +
ggtitle(paste(lstStudyAreas[i],"Study Area")) +
ylab("Outside Study Area                                                             Inside Study Area") +
scale_y_continuous(limits = c(-100, 100), breaks=c(-100,-75,-50,-25, 0, 25,50,75,100), labels=c("100%","75%","50%","25%", "0%", "25%","50%","75%","100%")) +
scale_fill_manual(values=c("#b1b1b1","#bed5cf","#659fb5","#869447","#27613b"), guide = guide_legend(reverse = TRUE)) +
theme_minimal() +
#theme(panel.background = element_rect(fill = "transparent"), panel.grid = element_blank(),legend.position = "bottom")
#theme(panel.background = element_rect(fill = "transparent"), legend.position = "bottom")
theme(panel.grid = element_blank(),legend.position = "bottom")
}
StudyAreaSpecies_subset3 %>%
ggplot(aes(x = reorder(axislable, TotalPosPercent),
y = PercentArea2,
fill = GAPstatus)) +
geom_col() +
coord_flip() +
geom_abline(slope=0, intercept=0.0,  col = "white") +
ggtitle(paste(lstStudyAreas[i],"Study Area")) +
ylab("Outside Study Area                                                             Inside Study Area") +
scale_y_continuous(limits = c(-100, 100), breaks=c(-100,-75,-50,-25, 0, 25,50,75,100), labels=c("100%","75%","50%","25%", "0%", "25%","50%","75%","100%")) +
scale_fill_manual(values=c("#b1b1b1","#bed5cf","#659fb5","#869447","#27613b"), guide = guide_legend(reverse = TRUE)) +
theme_minimal() +
#theme(panel.background = element_rect(fill = "transparent"), panel.grid = element_blank(),legend.position = "bottom")
#theme(panel.background = element_rect(fill = "transparent"), legend.position = "bottom")
theme(panel.grid = element_blank(),legend.position = "bottom")
for(j in 1:length(lstSpecies_subset)){  #
print(paste("working on ", lstSpecies[j], sep=""))
StudyAreaSpecies_subset <- inputTabAreaGAP[which(inputTabAreaGAP$Scientific==lstSpecies_subset[j]),]
StudyAreaSpecies_subset[which(StudyAreaSpecies_subset$StudyArea!=lstStudyAreas[i]),"StudyArea"] <- NA
StudyAreaSpecies_subsetComb <- rbind(StudyAreaSpecies_subsetComb, StudyAreaSpecies_subset)
StudyAreaSpecies_subset1 <- StudyAreaSpecies_subsetComb %>%
group_by( StudyArea, GAPstatus, Scientific,Rounded_GR) %>% #NPCA_status_GAP_StudyArea,
summarise(TotalArea = sum(VALUE_1)) %>%
ungroup()
StudyAreaSpecies_subset2 <- StudyAreaSpecies_subset1 %>%
group_by(Scientific) %>%
mutate(PercentArea =   (TotalArea / sum(TotalArea)*100) ) %>%
mutate(TotalArea2 = if_else(is.na(StudyArea), -TotalArea, TotalArea)) %>%
mutate(PercentArea2 = if_else(is.na(StudyArea), -PercentArea, PercentArea))
StudyAreaSpecies_subset3 <- StudyAreaSpecies_subset2 %>%
group_by(Scientific) %>%
mutate(TotalPosPercent =sum(PercentArea2[PercentArea2>0]))
StudyAreaSpecies_subset3 <- StudyAreaSpecies_subset3[which(StudyAreaSpecies_subset3$TotalPosPercent>10),]
StudyAreaSpecies_subset3$axislable <- paste0(StudyAreaSpecies_subset3$Scientific, " (", StudyAreaSpecies_subset3$Rounded_GR, ")")
StudyAreaSpecies_subset3$GAPstatus <- paste0("GAP",StudyAreaSpecies_subset3$GAPstatus)
StudyAreaSpecies_subset3$GAPstatus[StudyAreaSpecies_subset3$GAPstatus == "GAPUnprotected"] <- "Unprotected"
StudyAreaSpecies_subset3$GAPstatus <- factor(StudyAreaSpecies_subset3$GAPstatus, levels = c("Unprotected","GAP4","GAP3","GAP2","GAP1"))
StudyAreaSpecies_subset3 %>%
ggplot(aes(x = reorder(axislable, TotalPosPercent),
y = PercentArea2,
fill = GAPstatus)) +
geom_col() +
coord_flip() +
geom_abline(slope=0, intercept=0.0,  col = "white") +
ggtitle(paste(lstStudyAreas[i],"Study Area")) +
ylab("Outside Study Area                                                             Inside Study Area") +
scale_y_continuous(limits = c(-100, 100), breaks=c(-100,-75,-50,-25, 0, 25,50,75,100), labels=c("100%","75%","50%","25%", "0%", "25%","50%","75%","100%")) +
scale_fill_manual(values=c("#b1b1b1","#bed5cf","#659fb5","#869447","#27613b"), guide = guide_legend(reverse = TRUE)) +
theme_minimal() +
#theme(panel.background = element_rect(fill = "transparent"), panel.grid = element_blank(),legend.position = "bottom")
#theme(panel.background = element_rect(fill = "transparent"), legend.position = "bottom")
theme(panel.grid = element_blank(),legend.position = "bottom")
}
StudyAreaSpecies_subset3 %>%
ggplot(aes(x = reorder(axislable, TotalPosPercent),
y = PercentArea2,
fill = GAPstatus)) +
geom_col() +
coord_flip() +
geom_abline(slope=0, intercept=0.0,  col = "white") +
ggtitle(paste(lstStudyAreas[i],"Study Area")) +
ylab("Outside Study Area                                                             Inside Study Area") +
scale_y_continuous(limits = c(-100, 100), breaks=c(-100,-75,-50,-25, 0, 25,50,75,100), labels=c("100%","75%","50%","25%", "0%", "25%","50%","75%","100%")) +
scale_fill_manual(values=c("#b1b1b1","#bed5cf","#659fb5","#869447","#27613b"), guide = guide_legend(reverse = TRUE)) +
theme_minimal() +
#theme(panel.background = element_rect(fill = "transparent"), panel.grid = element_blank(),legend.position = "bottom")
#theme(panel.background = element_rect(fill = "transparent"), legend.position = "bottom")
theme(panel.grid = element_blank(),legend.position = "bottom")
ggsave(paste0("EndSpsSumm", i,".png"), plot = p, bg = "transparent",dpi = 300)
p <- StudyAreaSpecies_subset3 %>%
ggplot(aes(x = reorder(axislable, TotalPosPercent),
y = PercentArea2,
fill = GAPstatus)) +
geom_col() +
coord_flip() +
geom_abline(slope=0, intercept=0.0,  col = "white") +
ggtitle(paste(lstStudyAreas[i],"Study Area")) +
ylab("Outside Study Area                                                             Inside Study Area") +
scale_y_continuous(limits = c(-100, 100), breaks=c(-100,-75,-50,-25, 0, 25,50,75,100), labels=c("100%","75%","50%","25%", "0%", "25%","50%","75%","100%")) +
scale_fill_manual(values=c("#b1b1b1","#bed5cf","#659fb5","#869447","#27613b"), guide = guide_legend(reverse = TRUE)) +
theme_minimal() +
#theme(panel.background = element_rect(fill = "transparent"), panel.grid = element_blank(),legend.position = "bottom")
#theme(panel.background = element_rect(fill = "transparent"), legend.position = "bottom")
theme(panel.grid = element_blank(),legend.position = "bottom")
ggsave(paste0("EndSpsSumm", i,".png"), plot = p, bg = "transparent",dpi = 300)
ggsave(paste0("EndSpsSumm", lstStudyAreas[i],".png"), plot = p, path = "Outputs/", bg = "transparent",dpi = 300)
ggsave(paste0("PADUS Species Summary ", lstStudyAreas[i],".png"), plot = p, path = "Outputs/", bg = "transparent",dpi = 300)
ggsave(paste0("PADUS Species Summary - ", lstStudyAreas[i],".png"), plot = p, path = "Outputs/", bg = "transparent",dpi = 300)
